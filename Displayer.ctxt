#BlueJ class context
comment0.target=Displayer
comment1.params=
comment1.target=Displayer()
comment10.params=
comment10.target=int\ buttonPress()
comment2.params=e
comment2.target=void\ handle(javafx.event.ActionEvent)
comment3.params=g\ x\ y\ size
comment3.target=void\ draw1(javafx.scene.canvas.GraphicsContext,\ int,\ int,\ int)
comment3.text=\r\n\ draw1\ draws\ a\ Sierpinski\ carpet\ from\ a\ starting\ point.\r\n\ after\ drawing\ a\ rectangle\ on\ location,\ it\ draws\ 8\ subsequent\ rectangles\r\n\ 1/3\ the\ size,\ in\ 8\ directions\ proportionate\ to\ the\ size.\r\n\ once\ the\ size\ reaches\ 0,\ we\ reach\ the\ Base\ Case\r\n\ each\ recursion,\ size\ is\ divided\ by\ 3\ (smaller\ caller)\r\n\ each\ recursion,\ a\ rectangle\ is\ drawn\ (general\ case).\r\n
comment4.params=g\ x\ y\ size
comment4.target=void\ draw2(javafx.scene.canvas.GraphicsContext,\ int,\ int,\ int)
comment4.text=\r\n\ draw2\ (with\ the\ help\ of\ a,b,\ and\ c)\ does\ NOT\ draw\r\n\ a\ mandlebrot\ set,\ but\ it's\ pretending\ to\ be\r\n\ makes\ circles,\ with\ each\ method\ pertaining\ to\ a\ primary\r\n\ direction\ \r\n\ base\ case\:\ size\ <\=\ 0\r\n\ smaller\ caller\:\ size/2\ (or\ /3)\r\n\ general\ case\:\ fillOval\r\n
comment5.params=g\ x\ y\ size
comment5.target=void\ draw2a(javafx.scene.canvas.GraphicsContext,\ int,\ int,\ int)
comment6.params=g\ x\ y\ size
comment6.target=void\ draw2b(javafx.scene.canvas.GraphicsContext,\ int,\ int,\ int)
comment7.params=g\ x\ y\ size
comment7.target=void\ draw2c(javafx.scene.canvas.GraphicsContext,\ int,\ int,\ int)
comment8.params=g\ x\ y\ size
comment8.target=void\ draw3(javafx.scene.canvas.GraphicsContext,\ int,\ int,\ int)
comment9.params=g\ x\ y\ size
comment9.target=void\ currentFractal(javafx.scene.canvas.GraphicsContext,\ int,\ int,\ int)
numComments=11
